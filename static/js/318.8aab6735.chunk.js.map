{"version":3,"file":"static/js/318.8aab6735.chunk.js","mappings":"oPAEMA,EAAM,qDAGNC,EAAW,UAFE,gCAEF,8BADM,kCACN,2BAEXC,EAAQ,mCAAG,oGACUC,EAAAA,EAAAA,IAAUH,GADpB,cACPI,EADO,yBAENA,GAFM,2CAAH,qDAKRC,EAAW,mCAAG,WAAOC,GAAP,uFACSH,EAAAA,EAAAA,KAAWH,EAAKM,GADzB,cACVC,EADU,yBAETA,GAFS,2CAAH,sDAKXC,EAAU,mCAAG,WAAOC,GAAP,uFACUN,EAAAA,EAAAA,OAAA,UAAgBH,EAAhB,YAAuBS,IADjC,cACTC,EADS,yBAERA,GAFQ,2CAAH,sDAKVC,EAAU,mCAAG,oGACOR,EAAAA,EAAAA,IAAUF,GADjB,cACTW,EADS,yBAERA,GAFQ,2CAAH,oD,8JCpBVC,EAAgBC,EAAAA,EAAAA,IAAH,sEAKbC,EAAeD,EAAAA,EAAAA,IAAH,iEAKZE,EAAOF,EAAAA,EAAAA,GAAH,uQAYJG,EAAWH,EAAAA,EAAAA,EAAH,0SAcRI,EAAOJ,EAAAA,EAAAA,EAAH,uXAiBJK,EAAaL,EAAAA,EAAAA,EAAH,mUAeVM,EAAaN,EAAAA,EAAAA,EAAH,sSAcVO,EAASP,EAAAA,EAAAA,EAAH,gUAeNQ,EAAUR,EAAAA,EAAAA,OAAH,wa,6BC1Cb,EArDa,SAAC,GAA6C,IAA3CS,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,OACzC,OACI,wBACKH,EAAQI,KAAI,YAWN,IAVHlB,EAUE,EAVFA,GACAmB,EASE,EATFA,IACAC,EAQE,EARFA,OACAC,EAOE,EAPFA,OACAC,EAME,EANFA,SACAC,EAKE,EALFA,IACAC,EAIE,EAJFA,QACAC,EAGE,EAHFA,SACAC,EAEE,EAFFA,QACAC,EACE,EADFA,KAGMC,EAAYC,OAAOT,GAAUS,OAAOT,GACpCU,EAAgBR,EAASS,MAAM,KAC/BC,EACFH,OAAOC,EAAc,IAAM,GAC3BD,OAAOD,GACPC,OAAOV,GACPU,OAAON,GAEX,OACI,UAAChB,EAAD,YACI,UAACH,EAAD,YACI,UAACI,EAAD,sBAAY,0BAAOR,QACnB,UAACS,EAAD,iEAAgB,0BAAOgB,QACvB,UAACf,EAAD,gGAA4B,0BAAOW,QACnC,UAACV,EAAD,kHAA+B,0BAAOqB,IAAtC,0BACA,SAACnB,EAAD,CAASoB,KAAK,SAASC,QAAS,WAAOjB,EAAOjB,EAAI,EAAlD,UAAoD,SAAC,MAAD,OACpD,SAACa,EAAD,CAASqB,QAAS,kBAAMlB,EAAWhB,EAAjB,EAAlB,UAAwC,SAAC,MAAD,SAG3Ce,IAAWf,IACR,UAACM,EAAD,YACI,UAACM,EAAD,qFAAuB,0BAAOQ,IAA9B,uCACA,UAACR,EAAD,qDAAgB,0BAAOU,IAAvB,0BACA,UAACV,EAAD,0FAAuB,0BAAOO,IAA9B,2BACCI,IAAM,UAACX,EAAD,uEAAmB,0BAAOW,IAA1B,2BACNG,IAAU,UAACd,EAAD,iEAAkB,0BAAOc,OACnCF,GAAU,SAACZ,EAAD,CAAQuB,MAAO,CAACC,gBAAgB,GAAD,OAAKZ,IAApC,uEAAwE,MACnF,UAACZ,EAAD,0FAAuB,0BAAOe,YAlB/B3B,EAuBlB,KAGZ,E,UChBD,EAnCmB,WACf,OAA0BqC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOtB,EAAP,KAAeyB,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACP,IAAMC,EAAU,mCAAG,8GAEQjD,EAAAA,EAAAA,MAFR,OAERqB,EAFQ,OAGdyB,EAASzB,EAAQ6B,MAHH,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDAShBH,GACF,GAAE,IAEH,IAAMI,EAAY,mCAAG,WAAOC,GAAP,kFACXhD,EAAAA,EAAAA,IAAWgD,GADA,OAEjBR,GAAS,SAACS,GAAD,OAAeA,EAAUC,QAAO,qBAAGjD,KAAgB+C,CAAnB,GAAhC,IAFQ,2CAAH,sDAQlB,OACI,SAAC,EAAD,CACIjC,QAASwB,EACTvB,OAAQA,EACRC,WAPW,SAAChB,GAChBwC,GAAU,SAACU,GAAD,OAAaA,IAAWlD,EAAK,KAAOA,CAApC,GACb,EAMOiB,OAAQ6B,GAGnB,C","sources":["API/api.js","components/Info/Info.styled.js","components/Info/Info.jsx","pages/OrdersInfo/OrdersInfo.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API = 'https://6776676812a55a9a7d0b9792.mockapi.io/orders';\nconst WATHER_URL = 'https://api.weatherapi.com/v1';\nconst WATHER_API_KEY = 'c0dca8ed73ba444e8db231919241301';\nconst WEATHER_API = `${WATHER_URL}/forecast.json?key=${WATHER_API_KEY}&q=kosiv&days=1&lang=uk`;\n\nconst getUsers = async () => {\n    const allUsers = await axios.get(API);\n    return allUsers;\n};\n\nconst createUsers = async (newUser) => {\n    const createUser = await axios.post(API, newUser)\n    return createUser;\n};\n\nconst removeUser = async (id) => {\n    const deleteUser = await axios.delete(`${API}/${id}`);\n    return deleteUser;\n};\n\nconst getWeather = async () => {\n    const weather = await axios.get(WEATHER_API);\n    return weather;\n}\n\nexport {\n    getUsers, \n    createUsers,\n    removeUser,\n    getWeather\n}","import styled from \"@emotion/styled\";\n\nconst ContainerUser = styled.div`\n    display: flex;\n    flex-direction: row;\n`;\n\nconst ContainerInf = styled.div`\n    margin-top: 20px;\n    width: 100%;\n`;\n\nconst Iten = styled.li`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 0 auto 40px auto;\n    justify-content: center;\n    background-color: #e1eacd;\n    padding: 20px 40px;\n    width: 1000px;\n    border-radius: 50px;\n`;\n\nconst OrderNum = styled.p`\n    font-size: 24px;\n    font-weight: 600;\n    & span {\n        display: inline-block;\n        border-radius: 50%;\n        background-color: #bad8b6;\n        padding: 10px 18px;\n        font-size: 24px;\n        font-weight: 800;\n        margin-right: 30px;\n    }\n`;\n\nconst Name = styled.p`\n    font-size: 24px;\n    font-weight: 600;\n    & span {\n        width: 150px;\n        text-align: center;\n        display: inline-block;\n        padding: 5px 20px;\n        font-size: 24px;\n        font-weight: 800;\n        margin-right: 30px;\n        color: #01352c;\n        background-color: #bad8b6;\n        border-radius: 30px;\n    }\n`;\n\nconst UserNumber = styled.p`\n    font-size: 24px;\n    font-weight: 600;\n    & span {\n        display: inline-block;\n        padding: 5px 20px;\n        font-size: 24px;\n        font-weight: 800;\n        margin-right: 30px;\n        color: #e1eacd;\n        background-color: #61b390;\n        border-radius: 30px;\n    }\n`;\n\nconst TotalPrice = styled.p`\n    font-size: 24px;\n    font-weight: 600;\n    & span {\n        display: inline-block;\n        padding: 5px 20px;\n        font-size: 24px;\n        font-weight: 800;\n        color: #e1eacd;\n        background-color: #01352c;\n        border-radius: 30px;\n    }\n`;\n\nconst Lenses = styled.p`\n    font-size: 24px;\n    font-weight: 600;\n    margin-bottom: 20px;\n    & span {\n        display: inline-block;\n        padding: 5px 20px;\n        font-size: 24px;\n        font-weight: 800;\n        color: #e1eacd;\n        background-color: #01352c;\n        border-radius: 30px;\n    }\n`;\n\nconst BtnMore = styled.button`\n    margin: auto 0;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    border: none;\n    color: #e1eacd;\n    background-color: #01352c; \n    border-radius: 50%;\n    padding: 10px 10px;\n    width: 40px;\n    height: 40px;\n    margin-left: 10px;\n    \n    &:hover {\n        background-color: red;\n    }\n\n    & svg {\n        width: 30px;\n        height: 30px;\n    }\n`;\nexport { Iten, ContainerInf, ContainerUser, Lenses, BtnMore, Name, TotalPrice, OrderNum, UserNumber };","import { Iten, Name, ContainerUser, ContainerInf, UserNumber, TotalPrice, BtnMore, Lenses, OrderNum } from \"./Info.styled\";\nimport { FiChevronDown } from \"react-icons/fi\";\nimport { MdDelete } from \"react-icons/md\";\n\nconst Info = ({ allUser, openId, toggleShow, remove }) => {\n    return(\n        <ul>\n            {allUser.map(({ \n                id,\n                job,\n                lenses,\n                number,\n                rimPrice,\n                ton,\n                urgency,\n                userName,\n                comment,\n                date \n            }) => {\n\n                const lensesPow = Number(lenses) + Number(lenses);\n                const separiteValue = rimPrice.split(\" \");\n                const totalPrice =\n                    Number(separiteValue[1] || 0) +\n                    Number(lensesPow) +\n                    Number(job) +\n                    Number(ton);\n\n                return (\n                    <Iten key={id}>\n                        <ContainerUser>\n                            <OrderNum>№ <span>{id}</span></OrderNum>\n                            <Name>Замовник: <span>{userName}</span></Name>\n                            <UserNumber>Номер телефону: <span>{number}</span></UserNumber>\n                            <TotalPrice>Оплата замовлення: <span>{totalPrice}</span> грн</TotalPrice>\n                            <BtnMore type=\"button\" onClick={() => {remove(id)}}><MdDelete /></BtnMore>\n                            <BtnMore onClick={() => toggleShow(id)}><FiChevronDown /></BtnMore>\n                        </ContainerUser>\n                        \n                        {openId === id && (\n                            <ContainerInf>\n                                <Lenses>Ціна за лінзи: <span>{lenses}</span> грн/шт</Lenses>\n                                <Lenses>Оправа: <span>{rimPrice}</span> грн</Lenses>\n                                <Lenses>Оплата роботи: <span>{job}</span> грн</Lenses>\n                                {ton ? <Lenses>Тонування: <span>{ton}</span> грн</Lenses> : false}\n                                {comment ? <Lenses>Коментар: <span>{comment}</span></Lenses> : false}\n                                {urgency ? <Lenses style={{backgroundColor: `${urgency}`}}>ТЕРМІНОВО!!!</Lenses> : null}\n                                <Lenses>Час створення: <span>{date}</span></Lenses>\n                            </ContainerInf>\n                        )}\n                    </Iten>\n                )\n            })}\n        </ul>\n    )\n};\n\nexport default Info;","import { getUsers, removeUser } from \"API/api\";\nimport Info from \"components/Info\";\nimport { useEffect, useState } from \"react\";\n\nconst OrdersInfo = () => {\n    const [users, setUsers] = useState([]);\n    const [openId, setOpenId] = useState(null);\n\n    useEffect(() => {\n       const fetchUsers = async () => {\n        try {\n            const allUser = await getUsers();\n            setUsers(allUser.data);\n        } catch (err) {\n            console.log(err);\n        }\n       };\n\n       fetchUsers();\n    }, []);\n\n    const handleDelete = async (removedId) => {\n        await removeUser(removedId);\n        setUsers((prevUsers) => prevUsers.filter(({ id }) => id !== removedId));\n    };\n\n    const toggleShow = (id) => {\n        setOpenId((prevId) => (prevId === id ? null : id));\n    }\n    return (\n        <Info \n            allUser={users} \n            openId={openId} \n            toggleShow={toggleShow}\n            remove={handleDelete}\n        />\n    );\n};\n\nexport default OrdersInfo;"],"names":["API","WEATHER_API","getUsers","axios","allUsers","createUsers","newUser","createUser","removeUser","id","deleteUser","getWeather","weather","ContainerUser","styled","ContainerInf","Iten","OrderNum","Name","UserNumber","TotalPrice","Lenses","BtnMore","allUser","openId","toggleShow","remove","map","job","lenses","number","rimPrice","ton","urgency","userName","comment","date","lensesPow","Number","separiteValue","split","totalPrice","type","onClick","style","backgroundColor","useState","users","setUsers","setOpenId","useEffect","fetchUsers","data","console","log","handleDelete","removedId","prevUsers","filter","prevId"],"sourceRoot":""}